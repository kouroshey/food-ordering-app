{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\practice\\\\food-ordering\\\\food-ordering\\\\src\\\\components\\\\FoodList\\\\FoodList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FoodComp from './FoodComp';\nimport FoodCategoryItem from './FoodCategoryItem';\nimport supabase from '../../config/supabaseClient';\nimport MainSwiper from '../Swiper/MainSwiper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FoodList = () => {\n  _s();\n  const [foodsCategoryItems, setFoodsCategoryItems] = useState(null);\n  const [fetchError, setFetchError] = useState(null);\n  const [foods, setFoods] = useState(null);\n  useEffect(() => {\n    const fetchCategoryItems = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('foods_category').select();\n      if (error) {\n        setFetchError('Could not fetch category items');\n        setFoodsCategoryItems(null);\n        console.log(error);\n      }\n      if (data) {\n        setFoodsCategoryItems(data);\n        setFetchError(null);\n      }\n    };\n    fetchCategoryItems();\n  }, []);\n  useEffect(() => {}, []);\n  console.log(foodsCategoryItems);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"foodlist-container w-[95%] mx-auto my-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"foodlist-content flex flex-col gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl md:text-3xl font-semibold\",\n          children: \"Popular Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"foodlist-category p-4 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-x-4 gap-y-3\",\n          children: foodsCategoryItems && foodsCategoryItems.map(item => /*#__PURE__*/_jsxDEV(FoodCategoryItem, {\n            ...item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl md:text-3xl font-semibold\",\n          children: \"Popular Foods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"foodlist-main w-full\",\n          children: /*#__PURE__*/_jsxDEV(MainSwiper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(FoodList, \"5a22Ra0hievQXWFuchm+7wLlpgM=\");\n_c = FoodList;\nexport default FoodList;\nvar _c;\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"names":["React","useEffect","useState","FoodComp","FoodCategoryItem","supabase","MainSwiper","jsxDEV","_jsxDEV","Fragment","_Fragment","FoodList","_s","foodsCategoryItems","setFoodsCategoryItems","fetchError","setFetchError","foods","setFoods","fetchCategoryItems","data","error","from","select","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/practice/food-ordering/food-ordering/src/components/FoodList/FoodList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport FoodComp from './FoodComp'\r\nimport FoodCategoryItem from './FoodCategoryItem';\r\nimport supabase from '../../config/supabaseClient';\r\nimport MainSwiper from '../Swiper/MainSwiper';\r\n\r\nconst FoodList = () => {\r\n    const [foodsCategoryItems, setFoodsCategoryItems] = useState(null)\r\n    const [fetchError, setFetchError] = useState(null)\r\n    const [foods, setFoods] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchCategoryItems = async () => {\r\n            const { data, error } = await supabase.from('foods_category').select()\r\n\r\n            if (error) {\r\n                setFetchError('Could not fetch category items');\r\n                setFoodsCategoryItems(null)\r\n                console.log(error);\r\n            }\r\n            if (data) {\r\n                setFoodsCategoryItems(data)\r\n                setFetchError(null)\r\n            }\r\n        }\r\n        fetchCategoryItems()\r\n    }, [])\r\n\r\n    useEffect(()=> {}, [])\r\n    console.log(foodsCategoryItems);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"foodlist-container w-[95%] mx-auto my-8\">\r\n                <div className=\"foodlist-content flex flex-col gap-8\">\r\n                    <h2 className='text-2xl md:text-3xl font-semibold'>Popular Categories</h2>\r\n                    <div className=\"foodlist-category p-4 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-x-4 gap-y-3\">\r\n                        {foodsCategoryItems && foodsCategoryItems.map(item => (\r\n                            <FoodCategoryItem key={item.id} {...item} />\r\n                        ))}\r\n                    </div>\r\n                    <h2 className='text-2xl md:text-3xl font-semibold'>Popular Foods</h2>\r\n                    <div className=\"foodlist-main w-full\">\r\n                        <MainSwiper/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FoodList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}