{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\practice\\\\food-ordering\\\\food-ordering\\\\src\\\\components\\\\FoodList\\\\FoodList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FoodComp from './FoodComp';\nimport FoodCategoryItem from './FoodCategoryItem';\nimport supabase from '../../config/supabaseClient';\nimport MainSwiper from '../Swiper/MainSwiper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FoodList = () => {\n  _s();\n  // AN STATE FOR CATEGORY SECTION`S ITEMS\n  const [foodsCategoryItems, setFoodsCategoryItems] = useState(null);\n\n  // AN STATE FOR ERROR HANDLING\n  const [fetchError, setFetchError] = useState(null);\n\n  // AN STATE FOR ALL OF THE FOODS\n  const [foods, setFoods] = useState(null);\n\n  // SET USEEFFECT FOR FETCHING CATEGORY DATA FROM SERVER & ERROR HANDLING\n  useEffect(() => {\n    const fetchCategoryItems = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('foods_category').select();\n      if (error) {\n        setFetchError('Could not fetch category items! Please check your connection');\n        setFoodsCategoryItems(null);\n        console.log(error);\n      }\n      if (data) {\n        setFoodsCategoryItems(data);\n        setFetchError(null);\n      }\n    };\n    fetchCategoryItems();\n  }, []);\n\n  // SET USEEFFECT FOR FETCHING ALL OF THE FOODS DATA FROM SERVER & ERROR HANDLING\n  useEffect(() => {\n    const fetchFoods = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('foods').select();\n      if (error) {\n        setFetchError('Could not fetch foods! Please check your connection.');\n        setFoods(null);\n        console.log(error);\n      }\n      if (data) {\n        setFoods(data);\n        setFetchError(null);\n      }\n    };\n    fetchFoods();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"foodlist-container w-[95%] mx-auto my-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"foodlist-content flex flex-col gap-8\",\n        id: \"Category\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl w-max md:text-3xl font-semibold after:w-full after:h-[2px] after:bg-primary after:block after:mt-1\",\n          children: \"Popular Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"foodlist-category p-4 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-x-4 gap-y-3\",\n          children: foodsCategoryItems ? foodsCategoryItems.map(item => /*#__PURE__*/_jsxDEV(FoodCategoryItem, {\n            ...item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)) : fetchError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl w-max md:text-3xl font-semibold after:w-full after:h-[2px] after:bg-primary after:block after:mt-1\",\n          children: \"Popular Foods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"foodlist-main w-full\",\n          children: /*#__PURE__*/_jsxDEV(MainSwiper, {\n            foods: foods,\n            error: fetchError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(FoodList, \"5a22Ra0hievQXWFuchm+7wLlpgM=\");\n_c = FoodList;\nexport default FoodList;\nvar _c;\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"names":["React","useEffect","useState","FoodComp","FoodCategoryItem","supabase","MainSwiper","jsxDEV","_jsxDEV","Fragment","_Fragment","FoodList","_s","foodsCategoryItems","setFoodsCategoryItems","fetchError","setFetchError","foods","setFoods","fetchCategoryItems","data","error","from","select","console","log","fetchFoods","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/practice/food-ordering/food-ordering/src/components/FoodList/FoodList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport FoodComp from './FoodComp'\r\nimport FoodCategoryItem from './FoodCategoryItem';\r\nimport supabase from '../../config/supabaseClient';\r\nimport MainSwiper from '../Swiper/MainSwiper';\r\n\r\nconst FoodList = () => {\r\n    // AN STATE FOR CATEGORY SECTION`S ITEMS\r\n    const [foodsCategoryItems, setFoodsCategoryItems] = useState(null)\r\n\r\n    // AN STATE FOR ERROR HANDLING\r\n    const [fetchError, setFetchError] = useState(null)\r\n    \r\n    // AN STATE FOR ALL OF THE FOODS\r\n    const [foods, setFoods] = useState(null)\r\n\r\n    // SET USEEFFECT FOR FETCHING CATEGORY DATA FROM SERVER & ERROR HANDLING\r\n    useEffect(() => {\r\n        const fetchCategoryItems = async () => {\r\n            const { data, error } = await supabase.from('foods_category').select()\r\n\r\n            if (error) {\r\n                setFetchError('Could not fetch category items! Please check your connection');\r\n                setFoodsCategoryItems(null)\r\n                console.log(error);\r\n            }\r\n            if (data) {\r\n                setFoodsCategoryItems(data)\r\n                setFetchError(null)\r\n            }\r\n        }\r\n        fetchCategoryItems()\r\n    }, [])\r\n\r\n    // SET USEEFFECT FOR FETCHING ALL OF THE FOODS DATA FROM SERVER & ERROR HANDLING\r\n    useEffect(() => {\r\n        const fetchFoods = async () => {\r\n            const { data, error } = await supabase.from('foods').select()\r\n            \r\n            if (error) {\r\n                setFetchError('Could not fetch foods! Please check your connection.');\r\n                setFoods(null)\r\n                console.log(error);\r\n            }\r\n            if (data) {\r\n                setFoods(data)\r\n                setFetchError(null)\r\n            }\r\n        } \r\n        fetchFoods()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"foodlist-container w-[95%] mx-auto my-8\">\r\n                <div className=\"foodlist-content flex flex-col gap-8\" id='Category'>\r\n                    <h2 className='text-2xl w-max md:text-3xl font-semibold after:w-full after:h-[2px] after:bg-primary after:block after:mt-1'>Popular Categories</h2>\r\n                    <div className=\"foodlist-category p-4 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-x-4 gap-y-3\">\r\n                        {/* IF foodsCategoryItems was true, then set a map on it */}\r\n                        {foodsCategoryItems ? foodsCategoryItems.map(item => (\r\n                            <FoodCategoryItem key={item.id} {...item} />\r\n                        )) : fetchError}\r\n                    </div>\r\n                    <h2 className='text-2xl w-max md:text-3xl font-semibold after:w-full after:h-[2px] after:bg-primary after:block after:mt-1'>Popular Foods</h2>\r\n                    <div className=\"foodlist-main w-full\">\r\n                        <MainSwiper foods={foods} error={fetchError} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FoodList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}